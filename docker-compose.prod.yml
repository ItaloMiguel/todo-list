version: '3.8'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn setup.wsgi:application --bind 0.0.0.0:8000 --timeout 200
    volumes:
      - static_volume:/home/app/web/static
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - postgres

  # postgres:
  #   image: postgres:14.6-alpine
  #   env_file:
  #     - ./.env.prod.postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - postgres-network

  postgres:
    image: postgres:13.0-alpine
    container_name: postgresql_container
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_postgres: todolist
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - postgres-network
    ports:
      - "5432:5432"

  pg-admin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4_container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - postgres-network

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/static
    ports:
      - 1337:80
    depends_on:
      - web
      
volumes:
  postgres_data:
  static_volume:

networks:
  postgres-network:
    driver: bridge

